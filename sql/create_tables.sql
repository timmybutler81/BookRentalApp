-- Create GENRE Table
CREATE TABLE GENRE
(
    GENRE_ID    INT AUTO_INCREMENT PRIMARY KEY,
    GENRE_NAME  VARCHAR(100) NOT NULL,
    ACTIVE_FLAG VARCHAR(1)   NOT NULL DEFAULT ('Y')
);

-- Create BOOK Table
CREATE TABLE BOOK
(
    BOOK_ID      INT AUTO_INCREMENT PRIMARY KEY,
    GENRE_ID     INT,
    TITLE        VARCHAR(255) NOT NULL,
    AUTHOR       VARCHAR(255) NOT NULL,
    ISBN         VARCHAR(20) UNIQUE,
    PUBLISHER    VARCHAR(255),
    PUBLISH_YEAR INT,
    ACTIVE_FLAG  VARCHAR(1)   NOT NULL DEFAULT ('Y'),
    FOREIGN KEY (GENRE_ID) REFERENCES GENRE (GENRE_ID)
);

-- Create USER_TYPE Table
CREATE TABLE USER_TYPE
(
    USER_TYPE_ID         INT AUTO_INCREMENT PRIMARY KEY,
    TYPE_NAME            VARCHAR(100) NOT NULL,
    RENTAL_DURATION_DAYS INT          NOT NULL,
    ACTIVE_FLAG          VARCHAR(1)   NOT NULL DEFAULT ('Y')
);

-- Create USER Table
CREATE TABLE USER
(
    USER_ID           INT AUTO_INCREMENT PRIMARY KEY,
    USER_TYPE_ID      INT,
    FIRST_NAME        VARCHAR(100)        NOT NULL,
    LAST_NAME         VARCHAR(100)        NOT NULL,
    EMAIL_ADDRESS     VARCHAR(100) UNIQUE NOT NULL,
    PHONE_NUMBER      VARCHAR(20),
    REGISTRATION_DATE DATE                NOT NULL,
    ACTIVE_FLAG       VARCHAR(1)          NOT NULL DEFAULT ('Y'),
    FOREIGN KEY (USER_TYPE_ID) REFERENCES USER_TYPE (USER_TYPE_ID)
);

-- Create TRANSACTION_TYPE Table
CREATE TABLE TRANSACTION_TYPE
(
    TRANSACTION_TYPE_ID   INT AUTO_INCREMENT PRIMARY KEY,
    TRANSACTION_TYPE_NAME VARCHAR(100) NOT NULL,
    ACTIVE_FLAG           VARCHAR(1)   NOT NULL DEFAULT ('Y')
);

-- Create TRANSACTION_STATUS Table
CREATE TABLE TRANSACTION_STATUS
(
    TRANSACTION_STATUS_ID   INT AUTO_INCREMENT PRIMARY KEY,
    TRANSACTION_STATUS_NAME VARCHAR(100) NOT NULL,
    ACTIVE_FLAG             VARCHAR(1)   NOT NULL DEFAULT ('Y')
);

-- Create BOOK_STATUS Table
CREATE TABLE BOOK_STATUS
(
    BOOK_STATUS_ID   INT AUTO_INCREMENT PRIMARY KEY,
    BOOK_STATUS_NAME VARCHAR(100) NOT NULL,
    ACTIVE_FLAG      VARCHAR(1)   NOT NULL DEFAULT ('Y')
);

-- Create BOOK_LICENSE Table
CREATE TABLE BOOK_LICENSE
(
    BOOK_LICENSE_ID INT AUTO_INCREMENT PRIMARY KEY,
    BOOK_ID         INT,
    BOOK_STATUS_ID  INT,
    LICENSE_KEY     VARCHAR(255) UNIQUE NOT NULL,
    ACTIVE_FLAG     VARCHAR(1)          NOT NULL DEFAULT ('Y'),
    FOREIGN KEY (BOOK_ID) REFERENCES BOOK (BOOK_ID),
    FOREIGN KEY (BOOK_STATUS_ID) REFERENCES BOOK_STATUS (BOOK_STATUS_ID)
);

-- Create BOOK_RENTAL_TRANSACTION Table
CREATE TABLE BOOK_RENTAL_TRANSACTION
(
    TRANSACTION_ID        INT AUTO_INCREMENT PRIMARY KEY,
    USER_ID               INT,
    BOOK_LICENSE_ID       INT,
    TRANSACTION_TYPE_ID   INT,
    TRANSACTION_STATUS_ID INT,
    TRANSACTION_DATE      DATE NOT NULL,
    FOREIGN KEY (USER_ID) REFERENCES USER (USER_ID),
    FOREIGN KEY (BOOK_LICENSE_ID) REFERENCES BOOK_LICENSE (BOOK_LICENSE_ID),
    FOREIGN KEY (TRANSACTION_TYPE_ID) REFERENCES TRANSACTION_TYPE (TRANSACTION_TYPE_ID),
    FOREIGN KEY (TRANSACTION_STATUS_ID) REFERENCES TRANSACTION_STATUS (TRANSACTION_STATUS_ID)
);
